"""Change table request_history to exchange_history and add result column

Revision ID: 50ec4b5a5098
Revises: 8156b3c7665f
Create Date: 2024-04-03 18:30:56.821057

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '50ec4b5a5098'
down_revision: Union[str, None] = '8156b3c7665f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('exchange_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('currency_from', sa.String(), nullable=False),
    sa.Column('currency_to', sa.String(), nullable=False),
    sa.Column('request_date', sa.DateTime(), nullable=False),
    sa.Column('is_error', sa.Boolean(), nullable=True),
    sa.Column('exchange_rate', sa.DECIMAL(), nullable=True),
    sa.Column('result', sa.DECIMAL(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('request_history')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('request_history',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('currency_from', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('currency_to', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('request_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('is_error', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('exchange_rate', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='request_history_pkey')
    )
    op.drop_table('exchange_history')
    # ### end Alembic commands ###
